length :: [a] -> Int
length [] = 0
length (x:xs) = 1 + length xs

(++) :: [a] -> [a] -> [a]
[] ++ ys = ys
(x:xs) ++ ys = x : xs ++ ys

(+) :: Int -> Int -> Int
axiom arith: 0 + b .=. b
axiom arith: (a + b) + c .=. a + (b + c)

goal length (xs ++ ys) .=. length xs + length ys
